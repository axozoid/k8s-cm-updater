apiVersion: v1
kind: Namespace
metadata:
  name: k8s-cm-updater
---
# our secrets
apiVersion: v1
kind: Secret
metadata:
  name: test-app-secrets
  namespace: k8s-cm-updater
data:
  value1: dXNlcm5hbWUx
  value2: cGFzc3dvcmQx
---
# configmap represents a template with vars
# that will be filled by values from the secret
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-app-configmap
  namespace: k8s-cm-updater
  labels:
      app.kubernetes.io/instance: test-app
data:
  config.yml: |
    settings:
      username: ${value1}
      active: "true"
      config:
        password: ${value2}
---
# create a service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  cm-updater
  namespace: k8s-cm-updater
---
# create a role that can read and create configmaps and secrets
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: role-cm-updater
  namespace: k8s-cm-updater
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "patch"]
---
# link the role with the service account
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rb-cm-updater
  namespace: k8s-cm-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-cm-updater
subjects:
- kind: ServiceAccount
  name: cm-updater
  namespace: k8s-cm-updater
---
# sample pod that
apiVersion: v1
kind: Pod
metadata:
  name: test-app
  namespace: k8s-cm-updater
spec:
  # refer to our service account with proper permissions
  serviceAccount: cm-updater
  restartPolicy: Never

  initContainers:
  - name: k8s-cm-updater
    image: ozmate/k8s-cm-updater
    imagePullPolicy: Always
    # load our secrets
    envFrom:
        - secretRef:
              name: test-app-secrets
    # configuration
    env:
        - name: K8S_CM_UPDATER_NAME_IN
          value: "test-app-configmap"
        
        # NOTE: if write to a separate configmap,
        # you need create a "dummy" (empty) first
        # otherwise the pod won't start.

        # uncomment below to write to a new configmap
        # - name: K8S_CM_UPDATER_NAME_OUT
        #   value: "test-app-configmap-with-secrets"
        
        # uncomment below to increase verbosity
        # - name: K8S_CM_UPDATER_DEBUG
        #   value: "true"

        # uncomment below to write to a Secret and not to a configMap
        # - name: K8S_CM_UPDATER_WRITE_SECRET
        #   value: "true"
  
  containers:
  - name: main-container
    image: alpine:3.9
    command:
        - "/bin/sh"
        - "-c"
        - "sleep 5 && cat /config/*"
    volumeMounts:
    - name: config
      mountPath: /config

  volumes:
  - name: config
    configMap:
      name: test-app-configmap
